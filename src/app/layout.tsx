import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

import { headers } from "next/headers";
import WagmiContextProvider from "./_contexts/wagmi";
import { getServerSession } from "next-auth";
import { decode } from "next-auth/jwt";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cookies = (await headers()).get("cookie");
  const session = await getServerSession();

  // Get and decode the JWT token from cookies
  const cookieString = cookies || "";
  const tokenCookie = cookieString
    .split(";")
    .find((c) => c.trim().startsWith("next-auth.session-token="));

  if (tokenCookie) {
    const token = tokenCookie.split("=")[1];
    const decodedToken = await decode({
      token,
      secret: process.env.NEXTAUTH_SECRET!,
    });
    console.log("Decoded JWT Token:", decodedToken);
  }

  console.log("Session:", session);

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased flex min-h-screen flex-col dark`}
      >
        <WagmiContextProvider cookies={cookies}>
          {children}
        </WagmiContextProvider>
      </body>
    </html>
  );
}
